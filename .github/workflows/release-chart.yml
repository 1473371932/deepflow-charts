name: Release Charts

on:
  push:
    branches:
      - main
    paths:
      - 'charts/**'
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      ref:
        description: "Why trigger?"
        required: true 
        type: string

jobs:
  release:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Copy DeepFlow Agent chart
        run: |
          cp -rf charts/deepflow-agent charts/deepflow/charts/

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.4.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.6.1
        with:
          minikube version: 'v1.26.0'
          kubernetes version: 'v1.24.1'
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Interact with the cluster
        run: |
          kubectl get nodes
          kubectl get sc

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: "ghcr.io" 
          username: "${{ github.repository_owner }}"
          password: "${{ secrets.GITHUB_TOKEN }}" 

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          username: "deepflowce"
          password: "${{ secrets.REGISTRY_PASS }}"

      - name: Log in to ALIYUN Docker Registry
        uses: docker/login-action@v2
        with:
          registry: "registry.cn-beijing.aliyuncs.com"
          username: "${{ secrets.REGISTRY_ALIYUN_USER }}"
          password: "${{ secrets.REGISTRY_PASS }}"

      - name: add deepflow helm repo
        run: |
          helm repo add deepflow https://deepflowys.github.io/deepflow-charts/
          helm repo update deepflow 

      - name: install deepflow 
        run: |
          helm upgrade --install deepflow -n deepflow deepflow/deepflow --create-namespace \
              --set global.allInOneLocalStorage=true \
              --set global.hostNetwork=true \
              --set global.dnsPolicy=ClusterFirstWithHostNet \
              --set global.image.repository="registry.cn-beijing.aliyuncs.com/deepflow-ce"

      - name: sync image
        run: |
          sudo apt-get update
          sudo apt-get -y install skopeo
          DEPENDSIMAGE=$(kubectl get pods -n deepflow -o  jsonpath={.items[*].spec.containers[*].image}|awk -F" " '{for(i=1;i<=NF;i++) print $i}' |grep -v registry.cn-beijing.aliyuncs.com|sort -u)
          for SYNCIMAGE in $DEPENDSIMAGE
            do 
              SORTIMAGE=$(echo $SYNCIMAGE|awk -F/ '{print $NF}')
              echo $SORTIMAGE
              echo "skopeo copy -a  docker://$SYNCIMAGE docker://deepflowce/$SORTIMAGE"
              echo "skopeo copy -a  docker://$SYNCIMAGE docker://registry.cn-beijing.aliyuncs.com/deepflow-ce/$SORTIMAGE"
              echo "skopeo copy -a  docker://$SYNCIMAGE docker://ghcr.io/deepflowys/deepflow-ce/$SORTIMAGE "
              skopeo copy -a  docker://$SYNCIMAGE docker://deepflowce/$SORTIMAGE
              skopeo copy -a  docker://$SYNCIMAGE docker://registry.cn-beijing.aliyuncs.com/deepflow-ce/$SORTIMAGE
              skopeo copy -a  docker://$SYNCIMAGE docker://ghcr.io/deepflowys/deepflow-ce/$SORTIMAGE 
            done

  release_chart:
    name: release chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: 'gh-pages'
      - name: push to deepflow repo
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          gh repo clone deepflowys/deepflow
          cd deepflow/
          git checkout -b gh-pages origin/gh-pages
          cp -raf ../index.yaml ./index.yaml
          git config --global user.name "action"
          git config --global user.email "$action@users.noreply.github.com"
          git remote set-url --push origin https://action:${{ secrets.PUSH_SECRET }}@github.com/deepflowys/deepflow
          git add index.yaml
          git commit -am "update charts"
          git push 
        env:
          GH_TOKEN: ${{ secrets.PUSH_SECRET }}